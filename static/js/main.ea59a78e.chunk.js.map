{"version":3,"sources":["components/Bank.js","data/banks.js","components/Deposits.js","components/Menu.js","data/fields.js","components/Calculator.js","serviceWorker.js","index.js","App.js"],"names":["Bank","props","state","deposit","this","info","color","to","pathname","name","style","textDecoration","className","onClick","handler","src","image","alt","borderColor","percents","React","Component","data","90","180","270","360","Deposits","banks","map","bank","key","Menu","items","onMenuItemClick","item","value","bind","text","feilds","isDefault","Calculator","setRates","curr","forEach","a","fetch","response","json","currencyMap","rate","fieldName","setState","onInputChange","evt","field","target","validity","valid","calculate","type","currency","currencyRate","summ","parseInt","term","income","Math","floor","divideByDots","num","toString","split","reverse","reduce","val","index","menus","find","match","params","RUB","symbol","USD","EUR","bankName","transparentColor","currencySymbol","percent","bankImage","depositName","fields","label","menuState","backgroundColor","getMenu","id","readOnly","onChange","maxLength","minLength","pattern","clipPath","Boolean","window","location","hostname","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea59a78e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class Bank extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  render() {\n    const deposit = this.props.info.deposit;\n    const color = `rgba(${this.props.info.color}, 1)`;\n    return (\n      <NavLink\n        to={{\n          pathname: `/calculator/${this.props.info.name}`\n        }}\n        style={{ textDecoration: 'none' }}\n        className=\"bank\"\n        onClick={this.props.handler}>\n        <img src={this.props.info.image} alt={`${this.props.info.name} логотип`} />\n        <h1 style={{ borderColor: color }}>{this.props.info.name}</h1>\n        <div className=\"info\">\n          <h2 style={{ color }}>{deposit.name}</h2>\n          <b className=\"percent\">{deposit.percents['360']}%</b>\n          <span className=\"term\">for 360 days</span>\n        </div>\n      </NavLink>\n    )\n  }\n}\n","const data = [{\r\n    name: 'Tinkoff',\r\n    color: '255 , 221, 45',\r\n    image: 'http://tinkoffbankk.ru/wp-content/uploads/2018/01/BANKI001.jpg',\r\n    deposit: {\r\n        name: 'Smart Deposit',\r\n        percents: {\r\n            90: 5.5,\r\n            180: 6.5,\r\n            270: 6.5,\r\n            360: 6.5\r\n\r\n        }\r\n    }\r\n}, {\r\n    name: 'Sberbank',\r\n    color: '25, 187, 79',\r\n    image: 'https://www.sberbank.ru/portalserver/static/templates/%5BBBHOST%5D/RuMasterpageTemplate/static/icon200.png',\r\n    deposit: {\r\n        name: 'Anniversary',\r\n        percents: {\r\n            90: 6,\r\n            180: 7,\r\n            270: 7.5,\r\n            360: 9\r\n        }\r\n    }\r\n},\r\n{\r\n    name: 'Rocket Bank',\r\n    color: '255, 97, 1',\r\n    image: 'https://appstudio.org/wp-content/uploads/apps/628392874-320x320.png',\r\n    deposit: {\r\n        name: 'Cosy cosmos',\r\n        percents: {\r\n            90: 4,\r\n            180: 5.25,\r\n            270: 5.5,\r\n            360: 5.75\r\n        }\r\n    }\r\n}\r\n]\r\n\r\nexport default data","import React from 'react';\nimport Bank from './Bank';\n\nimport banks from '../data/banks';\n\n\nexport default function Deposits() {\n    return (\n        <section className=\"deposits\">\n            {banks.map((bank) => <Bank key={bank.name} info={bank} />)}\n        </section>\n    )\n}\n","import React from 'react';\n\nexport default class Menu extends React.Component {\n  render() {\n    const items = this.props.items\n    const color = this.props.color\n    const name = this.props.name\n    const handler = this.props.onMenuItemClick\n\n    return (\n      <ul style={{ borderColor: color }}>\n        {items.map((item) =>\n          <li style={{ borderColor: color }} key={item.value} onClick={handler.bind(this, name, item.value)}>{item.text}</li>\n        )}\n      </ul>\n    )\n  }\n}","const feilds = [{\r\n  name: 'summ',\r\n  text: 'Deposit amount (₽)'\r\n}, {\r\n  name: 'term',\r\n  text: 'For a term',\r\n  items: [{\r\n    value: 90,\r\n    text: '3 months'\r\n  },\r\n  {\r\n    value: 180,\r\n    text: '6 months'\r\n  },\r\n  {\r\n    value: 270,\r\n    text: '9 months'\r\n  },\r\n  {\r\n    value: 360,\r\n    text: '12 months',\r\n    isDefault: true\r\n  }\r\n  ]\r\n}, {\r\n  name: 'currency',\r\n  text: 'Currency',\r\n  items: [{\r\n    value: 'RUB',\r\n    text: 'RUB',\r\n    isDefault: true\r\n  },\r\n  {\r\n    value: 'USD',\r\n    text: 'USD'\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    text: 'EUR'\r\n  }\r\n  ]\r\n}]\r\n\r\nexport default feilds","import React from 'react';\nimport Menu from './Menu'\n\nimport fields from '../data/fields';\nimport banks from '../data/banks';\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      summ: 1000000,\n      term: 360,\n      currency: 'RUB',\n      menus: {\n        term: false,\n        currency: false\n      },\n      bank: banks.find((bank) => bank.name === this.props.match.params.name)\n    }\n\n    this.currencyMap = {\n      RUB: {\n        rate: 1,\n        symbol: '₽'\n      },\n      USD: {\n        rate: null,\n        symbol: '$'\n      },\n      EUR: {\n        rate: null,\n        symbol: '€'\n      }\n    }\n\n    this.setRates('USD', 'EUR')\n  }\n\n  setRates = (...curr) => {\n    curr.forEach(async (item) => {\n      const response = await fetch(`https://free.currconv.com/api/v7/convert?q=RUB_${item}&compact=ultra&apiKey=eacc4d63f1129ac90249`)\n      const data = await response.json()\n\n      this.currencyMap[item].rate = data[`RUB_${item}`]\n    })\n  }\n\n  getMenu(name) {\n    this.setState((state) => ({\n      menus: {\n        [name]: !state.menus[name]\n      }\n    }))\n  }\n\n  onMenuItemClick = (fieldName, value) => {\n    this.setState({ [fieldName]: value })\n  }\n\n  onInputChange = (evt, field) => {\n    if (evt.target.validity.valid && evt.target.value) {\n      this.setState({ [field]: evt.target.value })\n    } else {\n      return this.state[field]\n    }\n  }\n\n  calculate = (type = 'summ') => {\n    const currency = this.state.currency\n    const currencyRate = this.currencyMap[currency].rate\n    const summ = parseInt(this.state.summ)\n    const term = this.state.term\n    const percents = this.state.bank.deposit.percents[term]\n    const income = summ * percents / 100 / 12 * term / 30\n\n\n    switch (type) {\n      case 'income':\n        return Math.floor(income * currencyRate)\n      default:\n        return Math.floor((summ + income) * currencyRate)\n    }\n  }\n\n  divideByDots = (num) => num.toString().split(``).reverse().reduce((curr, val, index) => (index % 3 === 0) ? `${val}.${curr}` : `${val}${curr}`);\n\n  render() {\n    const bankName = this.state.bank.name\n    const color = `rgba(${this.state.bank.color}, 1)`\n    const transparentColor = `rgba(${this.state.bank.color}, 0.1)`\n    const currencySymbol = this.currencyMap[this.state.currency].symbol\n    const percent = this.state.bank.deposit.percents[this.state.term]\n    const bankImage = this.state.bank.image\n    const depositName = this.state.bank.deposit.name\n\n    const summ = this.calculate('summ')\n    const income = this.calculate('income')\n\n    return (\n      <section className=\"calculator\">\n        <div className=\"fields\">\n          {fields.map((field) => {\n            const items = field.items\n            const name = field.name\n            const label = field.text\n            const menuState = this.state.menus[name]\n            const value = (items && items.find((item) => item.value === this.state[name]).text) || this.state[name]\n\n            return (\n              <div\n                className={`field${menuState ? ` field--opened` : ``}`}\n                style={{ backgroundColor: color }}\n                key={name}\n                onClick={items && this.getMenu.bind(this, name)}>\n                <input\n                  id={name}\n                  style={{ borderColor: color }}\n                  readOnly={items}\n                  value={value}\n                  onChange={(evt) => this.onInputChange(evt, name)}\n                  maxLength=\"9\"\n                  minLength=\"1\"\n                  pattern=\"[0-9]*\"\n                />\n                <span>{label}</span>\n                {menuState && <Menu items={items} color={color} name={name} onMenuItemClick={this.onMenuItemClick} />}\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"calculator-wrapper\">\n          <section style={{ borderColor: color }} className=\"calculator__info\">\n            <p className=\"calculator__summ\">\n              <span>{this.divideByDots(summ)}</span>\n              <b>{currencySymbol}</b>\n            </p>\n            <p className=\"calculator__perc\">\n              <span>{this.divideByDots(income)}</span>\n              <b>{currencySymbol}</b>\n            </p>\n          </section>\n          <section className=\"calculator__item\">\n            <div style={{ borderColor: color, backgroundColor: transparentColor, clipPath: `polygon(50% 0%, 50% 50%, 100% ${percent * 10}%, 100% 0%)` }} className=\"calculator__income\"></div>\n            <div className=\"calculator__deposit\"></div>\n            <div className=\"calculator__percent\">\n              {percent}\n              <b style={{ color }}>%</b>\n            </div>\n          </section>\n        </div>\n        <section className=\"calculator__bank\">\n          <h2 className=\"bank-name\" style={{ borderColor: color }}>\n            {bankName}\n            <img src={bankImage} alt={`${bankName} логотип`} />\n          </h2>\n          <h3 className=\"bank-deposit\" style={{ color }}>{depositName}</h3>\n        </section>\n      </section>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import './css/App.css';\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Deposits from './components/Deposits';\nimport Calculator from './components/Calculator';\n\n\nexport default function Board() {\n  return (\n    <BrowserRouter>\n      <Route exact path='/' component={Deposits} />\n      <Route path='/calculator/:name' component={Calculator} />\n    </BrowserRouter>\n  )\n}\n\n\n\n"],"sourceRoot":""}