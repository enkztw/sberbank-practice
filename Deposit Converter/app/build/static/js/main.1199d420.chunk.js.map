{"version":3,"sources":["data/banks.js","data/fields.js","components/Menu.js","components/Calculator.js","components/Bank.js","App.js","serviceWorker.js","index.js"],"names":["data","name","color","image","deposit","percents","90","180","270","360","feilds","text","items","value","isDefault","Menu","this","props","handler","onMenuItemClick","style","borderColor","map","item","key","onClick","bind","React","Component","Calculator","setRates","curr","forEach","a","fetch","response","json","currencyMap","rate","fieldName","setState","onInputChange","evt","field","target","validity","valid","state","calculate","type","currency","currencyRate","summ","parseInt","term","bank","income","Math","floor","divideByDots","num","toString","split","reverse","reduce","val","index","menus","RUB","symbol","USD","EUR","transparentColor","currencySymbol","percent","bankName","bankImage","depositName","className","fields","label","menuState","find","backgroundColor","getMenu","id","readOnly","onChange","maxLength","minLength","pattern","clipPath","src","alt","Bank","Board","toggleCalculator","isCalculator","banks","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iSA4CeA,G,MA5CF,CAAC,CACVC,KAAM,UACNC,MAAO,gBACPC,MAAO,iEACPC,QAAS,CACLH,KAAM,gBACNI,SAAU,CACNC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,OAId,CACCR,KAAM,WACNC,MAAO,cACPC,MAAO,6GACPC,QAAS,CACLH,KAAM,cACNI,SAAU,CACNC,GAAI,EACJC,IAAK,EACLC,IAAK,IACLC,IAAK,KAIjB,CACIR,KAAM,cACNC,MAAO,aACPC,MAAO,sEACPC,QAAS,CACLH,KAAM,cACNI,SAAU,CACNC,GAAI,EACJC,IAAK,KACLC,IAAK,IACLC,IAAK,U,+BCKFC,EA3CA,CAAC,CACdT,KAAM,OACNU,KAAM,2BACL,CACDV,KAAM,OACNU,KAAM,aACNC,MAAO,CAAC,CACNC,MAAO,GACPF,KAAM,YAER,CACEE,MAAO,IACPF,KAAM,YAER,CACEE,MAAO,IACPF,KAAM,YAER,CACEE,MAAO,IACPF,KAAM,YACNG,WAAW,KAGZ,CACDb,KAAM,WACNU,KAAM,WACNC,MAAO,CAAC,CACNC,MAAO,MACPF,KAAM,MACNG,WAAW,GAEb,CACED,MAAO,MACPF,KAAM,OAER,CACEE,MAAO,MACPF,KAAM,UCpCWI,E,iLACT,IAAD,OACDH,EAAQI,KAAKC,MAAML,MACnBV,EAAQc,KAAKC,MAAMf,MACnBD,EAAOe,KAAKC,MAAMhB,KAClBiB,EAAUF,KAAKC,MAAME,gBAE3B,OACE,wBAAIC,MAAO,CAAEC,YAAanB,IACvBU,EAAMU,KAAI,SAACC,GAAD,OACT,wBAAIH,MAAO,CAAEC,YAAanB,GAASsB,IAAKD,EAAKV,MAAOY,QAASP,EAAQQ,KAAK,EAAMzB,EAAMsB,EAAKV,QAASU,EAAKZ,c,GAVjFgB,IAAMC,WCEnBC,E,YACnB,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KA8BRa,SAAW,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBACtBA,EAAKC,QAAL,uCAAa,WAAOT,GAAP,iBAAAU,EAAA,sEACYC,MAAM,kDAAD,OAAmDX,EAAnD,+CADjB,cACLY,EADK,gBAEQA,EAASC,OAFjB,OAELpC,EAFK,OAIX,EAAKqC,YAAYd,GAAMe,KAAOtC,EAAK,OAAD,OAAQuB,IAJ/B,2CAAb,wDAhCiB,EAgDnBJ,gBAAkB,SAACoB,EAAW1B,GAC5B,EAAK2B,SAAL,eAAiBD,EAAY1B,KAjDZ,EAoDnB4B,cAAgB,SAACC,EAAKC,GACpB,IAAID,EAAIE,OAAOC,SAASC,QAASJ,EAAIE,OAAO/B,MAG1C,OAAO,EAAKkC,MAAMJ,GAFlB,EAAKH,SAAL,eAAiBG,EAAQD,EAAIE,OAAO/B,SAtDrB,EA4DnBmC,UAAY,WAAoB,IAAnBC,EAAkB,uDAAX,OACZC,EAAW,EAAKH,MAAMG,SACtBC,EAAe,EAAKd,YAAYa,GAAUZ,KAC1Cc,EAAOC,SAAS,EAAKN,MAAMK,MAC3BE,EAAO,EAAKP,MAAMO,KAClBjD,EAAW,EAAKY,MAAMsC,KAAKnD,QAAQC,SAASiD,GAC5CE,EAASJ,EAAO/C,EAAW,IAAM,GAAKiD,EAAO,GAGnD,OAAQL,GACN,IAAK,SACH,OAAOQ,KAAKC,MAAMF,EAASL,GAC7B,QACE,OAAOM,KAAKC,OAAON,EAAOI,GAAUL,KAzEvB,EA6EnBQ,aAAe,SAACC,GAAD,OAASA,EAAIC,WAAWC,MAAf,IAAyBC,UAAUC,QAAO,SAACjC,EAAMkC,EAAKC,GAAZ,OAAuBA,EAAQ,IAAM,EAAf,UAAuBD,EAAvB,YAA8BlC,GAA9B,UAA0CkC,GAA1C,OAAgDlC,OA1EtI,EAAKgB,MAAQ,CACXK,KAAM,IACNE,KAAM,IACNJ,SAAU,MACViB,MAAO,CACLb,MAAM,EACNJ,UAAU,IAId,EAAKb,YAAc,CACjB+B,IAAK,CACH9B,KAAM,EACN+B,OAAQ,UAEVC,IAAK,CACHhC,KAAM,KACN+B,OAAQ,KAEVE,IAAK,CACHjC,KAAM,KACN+B,OAAQ,WAIZ,EAAKvC,SAAS,MAAO,OA5BJ,E,qEAwCX7B,GACNe,KAAKwB,UAAS,SAACO,GAAD,MAAY,CACxBoB,MAAM,eACHlE,GAAQ8C,EAAMoB,MAAMlE,U,+BAoCjB,IAAD,OACDC,EAAK,eAAWc,KAAKC,MAAMsC,KAAKrD,MAA3B,QACLsE,EAAgB,eAAWxD,KAAKC,MAAMsC,KAAKrD,MAA3B,UAChBuE,EAAiBzD,KAAKqB,YAAYrB,KAAK+B,MAAMG,UAAUmB,OACvDK,EAAU1D,KAAKC,MAAMsC,KAAKnD,QAAQC,SAASW,KAAK+B,MAAMO,MACtDqB,EAAW3D,KAAKC,MAAMsC,KAAKtD,KAC3B2E,EAAY5D,KAAKC,MAAMsC,KAAKpD,MAC5B0E,EAAc7D,KAAKC,MAAMsC,KAAKnD,QAAQH,KAEtCmD,EAAOpC,KAAKgC,UAAU,QACtBQ,EAASxC,KAAKgC,UAAU,UAE9B,OACE,6BAAS8B,UAAU,cACjB,yBAAKA,UAAU,UACZC,EAAOzD,KAAI,SAACqB,GACX,IAAM/B,EAAQ+B,EAAM/B,MACdX,EAAO0C,EAAM1C,KACb+E,EAAQrC,EAAMhC,KACdsE,EAAY,EAAKlC,MAAMoB,MAAMlE,GAC7BY,EAASD,GAASA,EAAMsE,MAAK,SAAC3D,GAAD,OAAUA,EAAKV,QAAU,EAAKkC,MAAM9C,MAAOU,MAAS,EAAKoC,MAAM9C,GAElG,OACE,yBACE6E,UAAS,eAAUG,EAAS,qBAC5B7D,MAAO,CAAE+D,gBAAiBjF,GAC1BsB,IAAKvB,EACLwB,QAASb,GAAS,EAAKwE,QAAQ1D,KAAK,EAAMzB,IAC1C,2BACEoF,GAAIpF,EACJmB,MAAO,CAAEC,YAAanB,GACtBoF,SAAU1E,EACVC,MAAOA,EACP0E,SAAU,SAAC7C,GAAD,OAAS,EAAKD,cAAcC,EAAKzC,IAC3CuF,UAAU,IACVC,UAAU,IACVC,QAAQ,WAEV,8BAAOV,GACNC,GAAa,kBAAC,EAAD,CAAMrE,MAAOA,EAAOV,MAAOA,EAAOD,KAAMA,EAAMkB,gBAAiB,EAAKA,uBAK1F,yBAAK2D,UAAU,sBACb,6BAAS1D,MAAO,CAAEC,YAAanB,GAAS4E,UAAU,oBAChD,uBAAGA,UAAU,oBACX,8BAAO9D,KAAK2C,aAAaP,IACzB,2BAAIqB,IAEN,uBAAGK,UAAU,oBACX,8BAAO9D,KAAK2C,aAAaH,IACzB,2BAAIiB,KAGR,6BAASK,UAAU,oBACjB,yBAAK1D,MAAO,CAAEC,YAAanB,EAAOiF,gBAAiBX,EAAkBmB,SAAS,iCAAD,OAA6C,GAAVjB,EAAnC,gBAAgEI,UAAU,uBACvJ,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,uBACZJ,EACD,uBAAGtD,MAAO,CAAElB,UAAZ,QAIN,6BAAS4E,UAAU,oBACjB,wBAAIA,UAAU,YAAY1D,MAAO,CAAEC,YAAanB,IAC7CyE,EACD,yBAAKiB,IAAKhB,EAAWiB,IAAG,UAAKlB,EAAL,kDAE1B,wBAAIG,UAAU,eAAe1D,MAAO,CAAElB,UAAU2E,S,GArJlBlD,IAAMC,WCFzBkE,E,YACnB,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAED8B,MAAQ,GAHI,E,sEAOjB,IAAM3C,EAAUY,KAAKC,MAAMb,QACrBF,EAAK,eAAWc,KAAKC,MAAMf,MAAtB,QACX,OACE,6BAAS4E,UAAU,OAAOrD,QAAST,KAAKC,MAAMC,SAC5C,yBAAK0E,IAAK5E,KAAKC,MAAMd,MAAO0F,IAAG,UAAK7E,KAAKC,MAAMhB,KAAhB,iDAC/B,wBAAImB,MAAO,CAAEC,YAAanB,IAAUc,KAAKC,MAAMhB,MAC/C,yBAAK6E,UAAU,QACb,wBAAI1D,MAAO,CAAElB,UAAUE,EAAQH,MAC/B,uBAAG6E,UAAU,WAAW1E,EAAQC,SAAS,KAAzC,KACA,0BAAMyE,UAAU,QAAhB,sB,GAjBwBnD,IAAMC,WCInBmE,E,YACnB,WAAY9E,GAAQ,IAAD,8BACjB,4CAAMA,KAQR+E,iBAAmB,SAACzC,GAClB,EAAKf,SAAS,CACZyD,cAAc,EACd1C,UATF,EAAKR,MAAQ,CACXkD,cAAc,EACd1C,KAAM,MALS,E,sEAgBT,IAAD,OAGP,OAFwBvC,KAAK+B,MAAMkD,aAG1B,kBAAC,EAAD,CAAY1C,KAAMvC,KAAK+B,MAAMQ,OAGpC,6BAASuB,UAAU,SAChBoB,EAAM5E,KAAI,SAACiC,GAAD,OAAU,kBAAC,EAAD,eAAM/B,IAAK+B,EAAKtD,MAAUsD,EAA1B,CAAgCrC,QAAS,EAAK8E,iBAAiBtE,KAAK,EAAM6B,c,GAzBpE5B,IAAMC,WCMrBuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1199d420.chunk.js","sourcesContent":["const data = [{\r\n    name: 'Tinkoff',\r\n    color: '255 , 221, 45',\r\n    image: 'http://tinkoffbankk.ru/wp-content/uploads/2018/01/BANKI001.jpg',\r\n    deposit: {\r\n        name: 'Smart Deposit',\r\n        percents: {\r\n            90: 5.5,\r\n            180: 6.5,\r\n            270: 6.5,\r\n            360: 6.5\r\n\r\n        }\r\n    }\r\n}, {\r\n    name: 'Sberbank',\r\n    color: '25, 187, 79',\r\n    image: 'https://www.sberbank.ru/portalserver/static/templates/%5BBBHOST%5D/RuMasterpageTemplate/static/icon200.png',\r\n    deposit: {\r\n        name: 'Anniversary',\r\n        percents: {\r\n            90: 6,\r\n            180: 7,\r\n            270: 7.5,\r\n            360: 9\r\n        }\r\n    }\r\n},\r\n{\r\n    name: 'Rocket Bank',\r\n    color: '255, 97, 1',\r\n    image: 'https://appstudio.org/wp-content/uploads/apps/628392874-320x320.png',\r\n    deposit: {\r\n        name: 'Cosy cosmos',\r\n        percents: {\r\n            90: 4,\r\n            180: 5.25,\r\n            270: 5.5,\r\n            360: 5.75\r\n        }\r\n    }\r\n}\r\n]\r\n\r\nexport default data","const feilds = [{\r\n  name: 'summ',\r\n  text: 'Deposit amount (₽)'\r\n}, {\r\n  name: 'term',\r\n  text: 'For a term',\r\n  items: [{\r\n    value: 90,\r\n    text: '3 months'\r\n  },\r\n  {\r\n    value: 180,\r\n    text: '6 months'\r\n  },\r\n  {\r\n    value: 270,\r\n    text: '9 months'\r\n  },\r\n  {\r\n    value: 360,\r\n    text: '12 months',\r\n    isDefault: true\r\n  }\r\n  ]\r\n}, {\r\n  name: 'currency',\r\n  text: 'Currency',\r\n  items: [{\r\n    value: 'RUB',\r\n    text: 'RUB',\r\n    isDefault: true\r\n  },\r\n  {\r\n    value: 'USD',\r\n    text: 'USD'\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    text: 'EUR'\r\n  }\r\n  ]\r\n}]\r\n\r\nexport default feilds","import React from 'react';\n\nexport default class Menu extends React.Component {\n  render() {\n    const items = this.props.items\n    const color = this.props.color\n    const name = this.props.name\n    const handler = this.props.onMenuItemClick\n\n    return (\n      <ul style={{ borderColor: color }}>\n        {items.map((item) =>\n          <li style={{ borderColor: color }} key={item.value} onClick={handler.bind(this, name, item.value)}>{item.text}</li>\n        )}\n      </ul>\n    )\n  }\n}","import React from 'react';\nimport fields from '../data/fields';\nimport Menu from './Menu'\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      summ: 1000000,\n      term: 360,\n      currency: 'RUB',\n      menus: {\n        term: false,\n        currency: false\n      }\n    }\n\n    this.currencyMap = {\n      RUB: {\n        rate: 1,\n        symbol: '₽'\n      },\n      USD: {\n        rate: null,\n        symbol: '$'\n      },\n      EUR: {\n        rate: null,\n        symbol: '€'\n      }\n    }\n\n    this.setRates('USD', 'EUR');\n  }\n\n  setRates = (...curr) => {\n    curr.forEach(async (item) => {\n      const response = await fetch(`https://free.currconv.com/api/v7/convert?q=RUB_${item}&compact=ultra&apiKey=eacc4d63f1129ac90249`)\n      const data = await response.json()\n\n      this.currencyMap[item].rate = data[`RUB_${item}`]\n    })\n  }\n\n  getMenu(name) {\n    this.setState((state) => ({\n      menus: {\n        [name]: !state.menus[name]\n      }\n    }))\n  }\n\n  onMenuItemClick = (fieldName, value) => {\n    this.setState({ [fieldName]: value })\n  }\n\n  onInputChange = (evt, field) => {\n    if (evt.target.validity.valid && evt.target.value) {\n      this.setState({ [field]: evt.target.value })\n    } else {\n      return this.state[field]\n    }\n  }\n\n  calculate = (type = 'summ') => {\n    const currency = this.state.currency\n    const currencyRate = this.currencyMap[currency].rate\n    const summ = parseInt(this.state.summ)\n    const term = this.state.term\n    const percents = this.props.bank.deposit.percents[term]\n    const income = summ * percents / 100 / 12 * term / 30\n\n\n    switch (type) {\n      case 'income':\n        return Math.floor(income * currencyRate)\n      default:\n        return Math.floor((summ + income) * currencyRate)\n    }\n  }\n\n  divideByDots = (num) => num.toString().split(``).reverse().reduce((curr, val, index) => (index % 3 === 0) ? `${val}.${curr}` : `${val}${curr}`);\n\n  render() {\n    const color = `rgba(${this.props.bank.color}, 1)`\n    const transparentColor = `rgba(${this.props.bank.color}, 0.1)`\n    const currencySymbol = this.currencyMap[this.state.currency].symbol\n    const percent = this.props.bank.deposit.percents[this.state.term]\n    const bankName = this.props.bank.name\n    const bankImage = this.props.bank.image\n    const depositName = this.props.bank.deposit.name\n\n    const summ = this.calculate('summ')\n    const income = this.calculate('income')\n\n    return (\n      <section className=\"calculator\">\n        <div className=\"fields\">\n          {fields.map((field) => {\n            const items = field.items\n            const name = field.name\n            const label = field.text\n            const menuState = this.state.menus[name]\n            const value = (items && items.find((item) => item.value === this.state[name]).text) || this.state[name]\n\n            return (\n              <div\n                className={`field${menuState ? ` field--opened` : ``}`}\n                style={{ backgroundColor: color }}\n                key={name}\n                onClick={items && this.getMenu.bind(this, name)}>\n                <input\n                  id={name}\n                  style={{ borderColor: color }}\n                  readOnly={items}\n                  value={value}\n                  onChange={(evt) => this.onInputChange(evt, name)}\n                  maxLength=\"9\"\n                  minLength=\"1\"\n                  pattern=\"[0-9]*\"\n                />\n                <span>{label}</span>\n                {menuState && <Menu items={items} color={color} name={name} onMenuItemClick={this.onMenuItemClick} />}\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"calculator-wrapper\">\n          <section style={{ borderColor: color }} className=\"calculator__info\">\n            <p className=\"calculator__summ\">\n              <span>{this.divideByDots(summ)}</span>\n              <b>{currencySymbol}</b>\n            </p>\n            <p className=\"calculator__perc\">\n              <span>{this.divideByDots(income)}</span>\n              <b>{currencySymbol}</b>\n            </p>\n          </section>\n          <section className=\"calculator__item\">\n            <div style={{ borderColor: color, backgroundColor: transparentColor, clipPath: `polygon(50% 0%, 50% 50%, 100% ${percent * 10}%, 100% 0%)` }} className=\"calculator__income\"></div>\n            <div className=\"calculator__deposit\"></div>\n            <div className=\"calculator__percent\">\n              {percent}\n              <b style={{ color }}>%</b>\n            </div>\n          </section>\n        </div>\n        <section className=\"calculator__bank\">\n          <h2 className=\"bank-name\" style={{ borderColor: color }}>\n            {bankName}\n            <img src={bankImage} alt={`${bankName} логотип`} />\n          </h2>\n          <h3 className=\"bank-deposit\" style={{ color }}>{depositName}</h3>\n        </section>\n      </section>\n    )\n  }\n}","import React from 'react';\n\nexport default class Bank extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  render() {\n    const deposit = this.props.deposit;\n    const color = `rgba(${this.props.color}, 1)`;\n    return (\n      <article className=\"bank\" onClick={this.props.handler}>\n        <img src={this.props.image} alt={`${this.props.name} логотип`} />\n        <h1 style={{ borderColor: color }}>{this.props.name}</h1>\n        <div className=\"info\">\n          <h2 style={{ color }}>{deposit.name}</h2>\n          <b className=\"percent\">{deposit.percents['360']}%</b>\n          <span className=\"term\">for 360 days</span>\n        </div>\n      </article>\n    )\n  }\n}\n","import React from 'react';\nimport './css/App.css';\nimport banks from './data/banks';\nimport Calculator from './components/Calculator';\nimport Bank from './components/Bank';\n\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isCalculator: false,\n      bank: null\n    }\n  }\n\n  toggleCalculator = (bank) => {\n    this.setState({\n      isCalculator: true,\n      bank\n    })\n  }\n\n  render() {\n    const calculatorState = this.state.isCalculator\n\n    if (calculatorState) {\n      return <Calculator bank={this.state.bank} />\n    }\n    return (\n      <section className=\"board\">\n        {banks.map((bank) => <Bank key={bank.name} {...bank} handler={this.toggleCalculator.bind(this, bank)} />)}\n      </section>)\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}